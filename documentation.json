{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "TabButtonDirective",
            "id": "directive-TabButtonDirective-5fe80a5c060598a295ac8ae9485959b352576b224c60f8b7870ae7582230a63213672d43f968a60bb6e81d41a95fc2d450bb169d1efad5820a743e12cb1ae00a",
            "file": "projects/components/src/lib/tabs/tab-button.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Directive, ElementRef} from \"@angular/core\";\n\n@Directive({\n  selector: '[ddTabButton]'\n})\nexport class TabButtonDirective {\n  constructor(private elRef: ElementRef<HTMLButtonElement>) {\n  }\n\n  focus() {\n    this.elRef.nativeElement.focus();\n  }\n}\n",
            "selector": "[ddTabButton]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "focus",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLButtonElement>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "elRef",
                        "type": "ElementRef<HTMLButtonElement>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        }
    ],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-30da42e0059d356de834ec9abdc73419d204576dedcdb635fb1240651cfaba3a35fc53fec842e121c3e97e76ea6183048c9031da512862904181151ed38fdcc0",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "angularChipState",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "title",
                    "defaultValue": "'devdive'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "methodsClass": [
                {
                    "name": "chipSelect",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 64,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, ContentChildren, Input, QueryList, ViewChild} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n// testing tabs using portals -\n@Component({\n  selector: 'tab-with-portal',\n  template: `\n    <ng-template cdkPortal>\n      <ng-content></ng-content>\n    </ng-template>`,\n})\nexport class TabWithPortal {\n  @Input() label!: string;\n\n  @ViewChild(CdkPortal, {static: true})\n  portalContent!: CdkPortal;\n}\n\n@Component({\n  selector: 'tabs-with-portal',\n  template: `\n    <button\n      *ngFor=\"let tab of tabs; let tabIndex = index\"\n      (click)=\"selectTab(tabIndex)\"\n    >\n      {{ tab.label }}\n    </button>\n\n    <div>\n      <ng-template [cdkPortalOutlet]=\"portals[activeIndex]\"></ng-template>\n    </div>\n  `\n})\nexport class TabsWithPortal {\n  activeIndex = 0;\n  portals!: Array<CdkPortal>;\n\n  @ContentChildren(TabWithPortal)\n  tabs!: QueryList<TabWithPortal>;\n\n  selectTab(tabIndex: number) {\n    this.activeIndex = tabIndex;\n  }\n\n  ngAfterContentInit() {\n    this.portals = this.tabs.map(({portalContent}) => {\n      const {templateRef, viewContainerRef} = portalContent;\n      return new CdkPortal(templateRef, viewContainerRef);\n    })\n  }\n}\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  angularChipState = false;\n\n  title = 'devdive';\n\n  chipSelect() {\n    this.angularChipState = !this.angularChipState;\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<dd-header></dd-header>\n\n<!--<dd-tab-group>-->\n<!--  <dd-tab label=\"Read the article\">-->\n<!--    <h1>tab 1</h1>-->\n<!--  </dd-tab>-->\n<!--  <dd-tab label=\"Watch the video\">-->\n<!--    <h1>tab 2</h1>-->\n<!--  </dd-tab>-->\n<!--  <dd-tab label=\"View the resources\">-->\n<!--    <h1>tab 3</h1>-->\n<!--  </dd-tab>-->\n<!--</dd-tab-group>-->\n\n\n<div style=\"display: flex; gap: 12px; justify-content: center; margin: 36px auto; max-width: 800px; flex-wrap: wrap\">\n  <button dd-chip [active]=\"angularChipState\" (click)=\"chipSelect()\">Angular</button>\n\n  <button dd-chip>Firebase</button>\n\n  <button dd-chip>Next.js</button>\n\n  <button dd-chip [active]=\"true\">Netlify</button>\n\n  <button dd-chip>React</button>\n\n  <button dd-chip [active]=\"true\">Github</button>\n\n  <button dd-chip>Vercel</button>\n\n  <button dd-chip>AWS</button>\n\n  <button dd-chip>Svelt Kit</button>\n\n  <button dd-chip>A11Y</button>\n\n  <button dd-chip [active]=\"true\">Universal</button>\n</div>\n\n\n<!--<tabs-with-portal>-->\n<!--  <tab-with-portal label=\"tab one\">-->\n<!--    component portal 1-->\n<!--  </tab-with-portal>-->\n\n<!--  <tab-with-portal label=\"tab two\">-->\n<!--    component portal 2-->\n<!--  </tab-with-portal>-->\n\n<!--  <tab-with-portal label=\"tab three\">-->\n<!--    component portal 3-->\n<!--  </tab-with-portal>-->\n<!--</tabs-with-portal>-->\n\n\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-6721f5b4fc23ace2179179150d99c8a499f72c251ae70a5c6cf264391de22b71c60d1def47fb4dd9a85424c3d323b2f17763815e99fa2ca0c8786c65ab4fcaea",
            "file": "projects/components/src/lib/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "button[dd-button], a[dd-button]",
            "styleUrls": [
                "button.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hbClassButton",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.button'"
                        }
                    ],
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.button",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "true",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, HostBinding} from \"@angular/core\";\n\n@Component({\n  selector: 'button[dd-button], a[dd-button]',\n  templateUrl: './button.component.html',\n  styleUrls: ['button.component.css']\n})\nexport class ButtonComponent {\n  @HostBinding('class.button')\n  protected readonly hbClassButton = true;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host(.button) {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-inline: 24px;\n  height: 32px;\n  background-color: var(--clr-primary);\n  border: none;\n  font-family: var(--font-family);\n  font-size: var(--font-size-md);\n  font-weight: var(--font-weight-regular);\n  line-height: var(--line-height-md);\n  border-radius: 8px;\n}\n",
                    "styleUrl": "button.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"link__text\">\n  <ng-content></ng-content>\n</span>\n"
        },
        {
            "name": "ChipComponent",
            "id": "component-ChipComponent-7a7bf9397ae6c0e7bca0a87b7b8b68db8a162757f124b6e3e76312eb7ad12fd6e63e59fdd94cdad3f2b3206676273802fcbcf80dfacd8fa0367b5d76c7aab709",
            "file": "projects/components/src/lib/chip/chip.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "button[dd-chip]",
            "styleUrls": [
                "./chip.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./chip.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hbClassChip",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.chip'"
                        }
                    ],
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.chip",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "true",
                    "decorators": []
                },
                {
                    "name": "class.chip--active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, HostBinding, Input} from \"@angular/core\";\n\n@Component({\n  selector: 'button[dd-chip]',\n  templateUrl: './chip.component.html',\n  styleUrls: ['./chip.component.css']\n})\nexport class ChipComponent {\n  @HostBinding('class.chip')\n  protected readonly hbClassChip = true;\n\n  @HostBinding('class.chip--active')\n  get hbClassChipActive(): boolean {\n    return this.active;\n  }\n\n  @Input() active: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host(.chip) {\n  --chip-indicator-size: 0;\n  --chip-indicator-margin: 0;\n  --chip-indicator-transform: scale(0);\n  --chip-indicator-transition: none;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: var(--spacing-2xs-px) var(--spacing-sm-px);\n  background-color: unset;\n  border: 1px solid var(--clr-100);\n  border-radius: var(--spacing-md-px);\n  font-family: var(--font-family);\n  font-size: var(--font-size-xs);\n  line-height: var(--line-height-xs);\n  font-weight: var(--font-weight-bold);\n}\n\n:host(.chip::before) {\n  content: '';\n  height: var(--chip-indicator-size);\n  width: var(--chip-indicator-size);\n  margin-right: var(--chip-indicator-margin);\n  border-radius: 4px;\n  background-color: var(--clr-primary);\n  transform: var(--chip-indicator-transform);\n  transition: var(--chip-indicator-transition);\n}\n\n:host(.chip--active) {\n  --chip-indicator-size: var(--spacing-xs-px);\n  --chip-indicator-margin: 6px;\n  --chip-indicator-transform: scale(1);\n  --chip-indicator-transition: transform var(--animation-speed-normal) ease-out;\n  border-color: var(--clr-primary);\n  color: var(--clr-primary);\n}\n",
                    "styleUrl": "./chip.component.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "hbClassChipActive": {
                    "name": "hbClassChipActive",
                    "getSignature": {
                        "name": "hbClassChipActive",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 13
                    }
                }
            },
            "templateData": "<span class=\"chip__text\">\n  <ng-content></ng-content>\n</span>\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-7a478705a200610158c57e122fb7e11c459f8b3e368b94d911ddf147b46f3af86039acde2a0e30cd914b8cbe2a62a2ddd3a8c475b34fac42622b8cd4eb0fd30e",
            "file": "projects/components/src/lib/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-header",
            "styleUrls": [
                "header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from \"@angular/core\";\n\n@Component({\n  selector: 'dd-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['header.component.css']\n})\nexport class HeaderComponent {\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".header {\n  display: flex;\n  align-items: center;\n  max-width: var(--max-width);\n  margin: auto;\n  padding-block: var(--spacing-md-px);\n}\n\n.header__logo {\n  justify-self: start;\n  margin-right: 74px;\n}\n\n.header__nav {\n  display: flex;\n  flex-grow: 1;\n  justify-content: center;\n  gap: var(--spacing-2xl-px);\n  list-style: none;\n  margin: 0;\n  padding-left: 0;\n}\n\n\n\n\n/* useless styles beacuase im lazy */\na {\n  color: white;\n  text-decoration: none;\n  font-family: var(--font-family);\n  font-weight: 400;\n  font-size: 22px;\n  line-height: var(--line-height-md);\n}\n\n#kill\\ me {\n  color: var(--clr-primary)\n}\n\nbutton {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding-inline: 24px;\n  height: 32px;\n  background-color: var(--clr-primary);\n  border: none;\n  font-family: var(--font-family);\n  font-size: var(--font-size-md);\n  font-weight: var(--font-weight-regular);\n  line-height: var(--line-height-md);\n  border-radius: 8px;\n}\n/* useless styles because im lazy */\n\n\n",
                    "styleUrl": "header.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<nav class=\"header\">\n    <div class=\"header__logo\">\n      <img src=\"/assets/logo.png\" alt=\"logo\">\n    </div>\n\n    <ul class=\"header__nav\">\n      <li class=\"header__link\">\n        <a href=\"#\">Home</a>\n      </li>\n      <li class=\"header__link\">\n        <a href=\"#\" id=\"kill me\">Blogs</a>\n      </li>\n      <li class=\"header__link\">\n        <a href=\"#\">Courses</a>\n      </li>\n      <li class=\"header__link\">\n        <a href=\"#\">Socials</a>\n      </li>\n    </ul>\n\n    <div class=\"header__login\">\n      <button>Login</button>\n    </div>\n</nav>\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-0deccae5e92213d59ca7a505a16fe05b33934507b0c5336d643152913585d5ced9de5df72660cd0d473fa0ceb114d23fe79c0df481f819ffe2b6dd7c1b3cb149",
            "file": "projects/components/src/lib/icon/icon.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-icon",
            "styleUrls": [
                "./icon.component.css"
            ],
            "styles": [],
            "template": "<ng-container #iconContainer></ng-container>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Icon",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconContainer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ViewContainerRef",
                    "optional": true,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'iconContainer', {read: ViewContainerRef}"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getIcon",
                    "args": [],
                    "optional": false,
                    "returnType": "unknown",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, ViewChild, ViewContainerRef} from '@angular/core';\nimport {FaIconComponent} from \"@fortawesome/angular-fontawesome\";\nimport {Icon} from \"./icon.interface\";\nimport {iconMapper} from \"./icon.mapper\";\n\n@Component({\n  selector: 'dd-icon',\n  template: `<ng-container #iconContainer></ng-container>`,\n  styleUrls: ['./icon.component.css']\n})\nexport class IconComponent {\n  @Input() icon!: Icon;\n\n  @ViewChild('iconContainer', {read: ViewContainerRef})\n  iconContainer?: ViewContainerRef;\n\n  async getIcon() {\n    return iconMapper[this.icon]();\n  }\n\n  async ngAfterViewInit() {\n    if (!this.icon) {\n      throw new Error('Icon is a required input')\n    }\n\n    const icon = await this.getIcon();\n    const component = this.iconContainer?.createComponent(FaIconComponent);\n\n    if(component) {\n      component.instance.icon = icon\n      component.instance.render();\n    }\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "\n",
                    "styleUrl": "./icon.component.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "LinkComponent",
            "id": "component-LinkComponent-3501380fac67baf7ad40476bda39693bdb448f95eb9fc88b013d48edf6625a68975c11852f2a6eb3cdb6e1031ca4f3a4fae02fa2e31584b39341f6e9435d4625",
            "file": "projects/components/src/lib/link/link.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "a[dd-link], button[dd-link]",
            "styleUrls": [
                "./link.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./link.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hbClassLink",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.link'"
                        }
                    ],
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.link",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "true",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, HostBinding} from '@angular/core';\n\n@Component({\n  selector: 'a[dd-link], button[dd-link]',\n  templateUrl: './link.component.html',\n  styleUrls: ['./link.component.css']\n})\nexport class LinkComponent {\n  @HostBinding('class.link')\n  protected readonly hbClassLink = true;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host(.link) {\n  color: var(--clr-100);\n  background-color: transparent;\n  padding: 0;\n  border: 0;\n  font-family: var(--font-family);\n  font-size: var(--font-size-md);\n  font-weight: var(--font-weight-regular);\n  line-height: var(--line-height-md);\n  text-decoration: none;\n  cursor: pointer;\n}\n",
                    "styleUrl": "./link.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<span class=\"link__text\">\n  <ng-content></ng-content>\n</span>\n\n<span class=\"link__icon\">\n\n</span>\n"
        },
        {
            "name": "TabContentComponent",
            "id": "component-TabContentComponent-341c164c63e4f800fd48a92154e6af2e9cfe80a22e2b0b84d0fedcc596265382e29494e9b064d1afdab8f9cb3691b78b5c22d44c85cf3932d5fbcbdd23d8909f",
            "file": "projects/components/src/lib/tabs/tab-content.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-tab",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'content'"
                        }
                    ]
                },
                {
                    "name": "id",
                    "defaultValue": "generateUniqueId('tab')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, TemplateRef, ViewChild} from \"@angular/core\";\nimport { generateUniqueId } from '../_utils';\n\n@Component({\n  selector: 'dd-tab',\n  template: `\n    <ng-template #content>\n      <ng-content></ng-content>\n    </ng-template>`\n  ,\n})\nexport class TabContentComponent {\n  id: string = generateUniqueId('tab');\n\n  @Input() label?: string;\n\n  @ViewChild('content')\n  content!: TemplateRef<unknown>\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TabGroupComponent",
            "id": "component-TabGroupComponent-c33894601bb9313ec39385bb82b574b085ec69f237422ba37bb432bf23fa9c04a87bf76a6a5aa6ea61f77fe82cab0bcb2811285ba2722b92cf7f4f14da72f750",
            "file": "projects/components/src/lib/tabs/tab-group.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "dd-tab-group",
            "styleUrls": [
                "./tab-group.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./tab-group.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "activeTabIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "focusManager",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FocusKeyManager<TabButtonDirective>",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "hbClassTabList",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.tabs'"
                        }
                    ],
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "tabButtons",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<TabButtonDirective>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "decorators": [
                        {
                            "name": "ViewChildren",
                            "stringifiedArguments": "TabButtonDirective"
                        }
                    ]
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<TabContentComponent>",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "TabContentComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "focusTab",
                    "args": [
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleKeyDown",
                    "args": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "KeyboardEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.tabs",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "true",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, ContentChildren, HostBinding, Input, QueryList, ViewChildren} from '@angular/core';\nimport {FocusKeyManager} from \"@angular/cdk/a11y\";\nimport {TabButtonDirective} from \"./tab-button.directive\";\nimport {TabContentComponent} from \"./tab-content.component\";\n\n@Component({\n  selector: 'dd-tab-group',\n  templateUrl: './tab-group.component.html',\n  styleUrls: ['./tab-group.component.css']\n})\nexport class TabGroupComponent {\n  focusManager!: FocusKeyManager<TabButtonDirective>;\n\n  @ViewChildren(TabButtonDirective) tabButtons!: QueryList<TabButtonDirective>;\n  @ContentChildren(TabContentComponent) tabs!: QueryList<TabContentComponent>;\n\n  @HostBinding('class.tabs')\n  protected readonly hbClassTabList = true;\n\n  @Input() activeTabIndex: number = 0;\n\n  selectTab(tabIndex: number) {\n    this.activeTabIndex = tabIndex;\n  }\n\n  focusTab(tabIndex: number) {\n    this.focusManager.setActiveItem(tabIndex)\n  }\n\n  handleKeyDown(event: KeyboardEvent, tabIndex: number) {\n    switch (event.key) {\n      case 'Enter':\n      case 'Space':\n        this.selectTab(tabIndex);\n        break;\n      default:\n        this.focusManager.onKeydown(event);\n    }\n  }\n\n  ngAfterViewInit() {\n    this.focusManager = new FocusKeyManager(this.tabButtons)\n    this.focusManager.withHorizontalOrientation('ltr');\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host(.tab-list) {\n  display: block;\n  margin: auto;\n  max-width: var(--max-width);\n}\n\n.tab-list__tabs {\n  display: flex;\n  justify-content: center;\n}\n\n.tab-list__tab {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: unset;\n  border: none;\n  border-bottom: 2px solid var(--clr-30);\n\n  /* needs increasing once we get icons loaded */\n  padding-inline: var(--spacing-sm-px);\n  max-width: 165px;\n\n  font-family: var(--font-family);\n  font-size: var(--font-size-sm);\n  line-height: var(--line-height-sm);\n  font-weight: var(--font-weight-regular);\n}\n\n.tab-list__tab--active {\n  border-bottom: 2px solid var(--clr-primary);\n  color: var(--clr-primary);\n}\n",
                    "styleUrl": "./tab-group.component.css"
                }
            ],
            "stylesData": "",
            "templateData": "<div class=\"tab-list__tabs\">\n  <button\n    *ngFor=\"let tab of tabs; let tabIndex = index\"\n    ddTabButton\n    class=\"tab-list__tab\"\n    [class.tab-list__tab--active]=\"activeTabIndex === tabIndex\"\n    (focus)=\"focusTab(tabIndex)\"\n    (keydown)=\"handleKeyDown($event, tabIndex)\"\n    (click)=\"selectTab(tabIndex)\"\n  >\n    <dd-icon icon=\"coffee\"></dd-icon>\n    {{ tab.label }}\n  </button>\n</div>\n\n<div\n  *ngFor=\"let tab of tabs; let tabIndex = index\"\n  class=\"tab-list__container\"\n>\n  <div\n    *ngIf=\"activeTabIndex === tabIndex\"\n    class=\"tab-list__content\"\n  >\n    <ng-container [ngTemplateOutlet]=\"tab.content\"></ng-container>\n  </div>\n</div>\n"
        },
        {
            "name": "TabsWithPortal",
            "id": "component-TabsWithPortal-30da42e0059d356de834ec9abdc73419d204576dedcdb635fb1240651cfaba3a35fc53fec842e121c3e97e76ea6183048c9031da512862904181151ed38fdcc0",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tabs-with-portal",
            "styleUrls": [],
            "styles": [],
            "template": "<button\n  *ngFor=\"let tab of tabs; let tabIndex = index\"\n  (click)=\"selectTab(tabIndex)\"\n>\n  {{ tab.label }}\n</button>\n\n<div>\n  <ng-template [cdkPortalOutlet]=\"portals[activeIndex]\"></ng-template>\n</div>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "portals",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<CdkPortal>",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<TabWithPortal>",
                    "optional": false,
                    "description": "",
                    "line": 39,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "TabWithPortal"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectTab",
                    "args": [
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tabIndex",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, ContentChildren, Input, QueryList, ViewChild} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n// testing tabs using portals -\n@Component({\n  selector: 'tab-with-portal',\n  template: `\n    <ng-template cdkPortal>\n      <ng-content></ng-content>\n    </ng-template>`,\n})\nexport class TabWithPortal {\n  @Input() label!: string;\n\n  @ViewChild(CdkPortal, {static: true})\n  portalContent!: CdkPortal;\n}\n\n@Component({\n  selector: 'tabs-with-portal',\n  template: `\n    <button\n      *ngFor=\"let tab of tabs; let tabIndex = index\"\n      (click)=\"selectTab(tabIndex)\"\n    >\n      {{ tab.label }}\n    </button>\n\n    <div>\n      <ng-template [cdkPortalOutlet]=\"portals[activeIndex]\"></ng-template>\n    </div>\n  `\n})\nexport class TabsWithPortal {\n  activeIndex = 0;\n  portals!: Array<CdkPortal>;\n\n  @ContentChildren(TabWithPortal)\n  tabs!: QueryList<TabWithPortal>;\n\n  selectTab(tabIndex: number) {\n    this.activeIndex = tabIndex;\n  }\n\n  ngAfterContentInit() {\n    this.portals = this.tabs.map(({portalContent}) => {\n      const {templateRef, viewContainerRef} = portalContent;\n      return new CdkPortal(templateRef, viewContainerRef);\n    })\n  }\n}\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  angularChipState = false;\n\n  title = 'devdive';\n\n  chipSelect() {\n    this.angularChipState = !this.angularChipState;\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TabWithPortal",
            "id": "component-TabWithPortal-30da42e0059d356de834ec9abdc73419d204576dedcdb635fb1240651cfaba3a35fc53fec842e121c3e97e76ea6183048c9031da512862904181151ed38fdcc0",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "tab-with-portal",
            "styleUrls": [],
            "styles": [],
            "template": "<ng-template cdkPortal>\n  <ng-content></ng-content>\n</ng-template>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "portalContent",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CdkPortal",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "CdkPortal, {static: true}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, ContentChildren, Input, QueryList, ViewChild} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n// testing tabs using portals -\n@Component({\n  selector: 'tab-with-portal',\n  template: `\n    <ng-template cdkPortal>\n      <ng-content></ng-content>\n    </ng-template>`,\n})\nexport class TabWithPortal {\n  @Input() label!: string;\n\n  @ViewChild(CdkPortal, {static: true})\n  portalContent!: CdkPortal;\n}\n\n@Component({\n  selector: 'tabs-with-portal',\n  template: `\n    <button\n      *ngFor=\"let tab of tabs; let tabIndex = index\"\n      (click)=\"selectTab(tabIndex)\"\n    >\n      {{ tab.label }}\n    </button>\n\n    <div>\n      <ng-template [cdkPortalOutlet]=\"portals[activeIndex]\"></ng-template>\n    </div>\n  `\n})\nexport class TabsWithPortal {\n  activeIndex = 0;\n  portals!: Array<CdkPortal>;\n\n  @ContentChildren(TabWithPortal)\n  tabs!: QueryList<TabWithPortal>;\n\n  selectTab(tabIndex: number) {\n    this.activeIndex = tabIndex;\n  }\n\n  ngAfterContentInit() {\n    this.portals = this.tabs.map(({portalContent}) => {\n      const {templateRef, viewContainerRef} = portalContent;\n      return new CdkPortal(templateRef, viewContainerRef);\n    })\n  }\n}\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  angularChipState = false;\n\n  title = 'devdive';\n\n  chipSelect() {\n    this.angularChipState = !this.angularChipState;\n  }\n}\n\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TypographyComponent",
            "id": "component-TypographyComponent-5b262938789fae773328f155cf35411ded42a98b973ed1205524de66c55ccdaba9b904fc5ee604d29c050571eac28c88c1e379fa099f2af121caedc6f89c063e",
            "file": "projects/components/src/lib/typography/typography.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "[dd-text]",
            "styleUrls": [
                "./typography.component.css"
            ],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "alignCenter",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "colour",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 92,
                    "type": "\"default\" | \"white\" | \"inherit\"",
                    "decorators": []
                },
                {
                    "name": "marginBottom",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'sm'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "\"xs\" | \"sm\" | \"md\" | \"lg\" | \"xl\" | \"2xl\"",
                    "decorators": []
                },
                {
                    "name": "weight",
                    "defaultValue": "'regular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 90,
                    "type": "\"light\" | \"regular\" | \"bold\" | \"heavy\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hbClassType",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class.type'"
                        }
                    ],
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.type",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "true",
                    "decorators": []
                },
                {
                    "name": "class.type--align-center",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 83,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--colour-default",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 63,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--colour-inherit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--colour-white",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--margin-bottom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--size-2xl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--size-lg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--size-md",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--size-sm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--size-xl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--size-xs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--weight-bold",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--weight-heavy",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--weight-light",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.type--weight-regular",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, HostBinding, Input} from '@angular/core'\n\n@Component({\n  selector: '[dd-text]',\n  template: `<ng-content></ng-content>`,\n  styleUrls: ['./typography.component.css']\n})\nexport class TypographyComponent {\n  @HostBinding('class.type')\n  protected readonly hbClassType = true;\n\n  @HostBinding('class.type--size-xs')\n  get hbClassTypeSizeXs(): boolean {\n    return this.size === 'xs'\n  }\n\n  @HostBinding('class.type--size-sm')\n  get hbClassTypeSizeSm(): boolean {\n    return this.size === 'sm'\n  }\n\n  @HostBinding('class.type--size-md')\n  get hbClassTypeSizeMd(): boolean {\n    return this.size === 'md'\n  }\n\n  @HostBinding('class.type--size-lg')\n  get hbClassTypeSizeLg(): boolean {\n    return this.size === 'lg'\n  }\n\n  @HostBinding('class.type--size-xl')\n  get hbClassTypeSizeXl(): boolean {\n    return this.size === 'xl'\n  }\n\n  @HostBinding('class.type--size-2xl')\n  get hbClassTypeSizeXXl(): boolean {\n    return this.size === '2xl'\n  }\n\n  @HostBinding('class.type--weight-light')\n  get hbClassTypeWeightLight(): boolean {\n    return this.weight === 'light'\n  }\n\n  @HostBinding('class.type--weight-regular')\n  get hbClassTypeWeightRegular(): boolean {\n    return this.weight === 'regular'\n  }\n\n  @HostBinding('class.type--weight-bold')\n  get hbClassTypeWeightBold(): boolean {\n    return this.weight === 'bold'\n  }\n\n  @HostBinding('class.type--weight-heavy')\n  get hbClassTypeWeightHeavy(): boolean {\n    return this.weight === 'heavy'\n  }\n\n  @HostBinding('class.type--colour-default')\n  get hbClassTypeColourDefault(): boolean {\n    return this.colour === 'default'\n  }\n\n  @HostBinding('class.type--colour-white')\n  get hbClassTypeColourWhite(): boolean {\n    return this.colour === 'white'\n  }\n\n  @HostBinding('class.type--colour-inherit')\n  get hbClassTypeColourInherit(): boolean {\n    return this.colour === 'inherit'\n  }\n\n  @HostBinding('class.type--margin-bottom')\n  get hbClassTypeMarginBottom(): boolean {\n    return this.marginBottom;\n  }\n\n  @HostBinding('class.type--align-center')\n  get hbClassTypeAlignCenter(): boolean {\n    return this.alignCenter;\n  }\n\n\n  @Input() size: 'xs' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' = 'sm';\n\n  @Input() weight: 'light' | 'regular' | 'bold' | 'heavy' = 'regular'\n\n  @Input() colour: 'default' | 'white' | 'inherit' = 'default';\n\n  @Input() marginBottom: boolean = false;\n\n  @Input() alignCenter: boolean = false;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host(.type) {\n  font-family: var(--font-family);\n}\n\n:host(.type--align-center) {\n  text-align: center;\n}\n\n:host(.type--margin-bottom) {\n  margin-bottom: var(--spacing-md);\n}\n\n:host(.type--colour-default) {\n  color: var(--clr-90);\n}\n\n:host(.type--colour-white) {\n  color: var(--clr-100);\n}\n\n:host(.type--colour-inherit) {\n  color: inherit;\n}\n\n:host(.type--size-xs) {\n  font-size: var(--font-size-xs);\n  line-height: var(--line-height-xs);\n}\n\n:host(.type--size-sm) {\n  font-size: var(--font-size-sm);\n  line-height: var(--line-height-sm);\n}\n\n:host(.type--size-md) {\n  font-size: var(--font-size-md);\n  line-height: var(--line-height-md);\n}\n\n:host(.type--size-lg) {\n  font-size: var(--font-size-lg);\n  line-height: var(--line-height-lg);\n}\n\n:host(.type--size-xl) {\n  font-size: var(--font-size-xl);\n  line-height: var(--line-height-xl);\n}\n\n:host(.type--size-2xl) {\n  font-size: var(--font-size-2xl);\n  line-height: var(--line-height-2xl);\n}\n\n:host(.type--weight-light) {\n  font-weight: var(--font-weight-light);\n}\n\n:host(.type--weight-regular) {\n  font-weight: var(--font-weight-regular);\n}\n\n:host(.type--weight-bold) {\n  font-weight: var(--font-weight-bold);\n}\n\n:host(.type--weight-heavy) {\n  font-weight: var(--font-weight-heavy);\n}\n",
                    "styleUrl": "./typography.component.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "hbClassTypeSizeXs": {
                    "name": "hbClassTypeSizeXs",
                    "getSignature": {
                        "name": "hbClassTypeSizeXs",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 13
                    }
                },
                "hbClassTypeSizeSm": {
                    "name": "hbClassTypeSizeSm",
                    "getSignature": {
                        "name": "hbClassTypeSizeSm",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 18
                    }
                },
                "hbClassTypeSizeMd": {
                    "name": "hbClassTypeSizeMd",
                    "getSignature": {
                        "name": "hbClassTypeSizeMd",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 23
                    }
                },
                "hbClassTypeSizeLg": {
                    "name": "hbClassTypeSizeLg",
                    "getSignature": {
                        "name": "hbClassTypeSizeLg",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 28
                    }
                },
                "hbClassTypeSizeXl": {
                    "name": "hbClassTypeSizeXl",
                    "getSignature": {
                        "name": "hbClassTypeSizeXl",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 33
                    }
                },
                "hbClassTypeSizeXXl": {
                    "name": "hbClassTypeSizeXXl",
                    "getSignature": {
                        "name": "hbClassTypeSizeXXl",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 38
                    }
                },
                "hbClassTypeWeightLight": {
                    "name": "hbClassTypeWeightLight",
                    "getSignature": {
                        "name": "hbClassTypeWeightLight",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 43
                    }
                },
                "hbClassTypeWeightRegular": {
                    "name": "hbClassTypeWeightRegular",
                    "getSignature": {
                        "name": "hbClassTypeWeightRegular",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 48
                    }
                },
                "hbClassTypeWeightBold": {
                    "name": "hbClassTypeWeightBold",
                    "getSignature": {
                        "name": "hbClassTypeWeightBold",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 53
                    }
                },
                "hbClassTypeWeightHeavy": {
                    "name": "hbClassTypeWeightHeavy",
                    "getSignature": {
                        "name": "hbClassTypeWeightHeavy",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 58
                    }
                },
                "hbClassTypeColourDefault": {
                    "name": "hbClassTypeColourDefault",
                    "getSignature": {
                        "name": "hbClassTypeColourDefault",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 63
                    }
                },
                "hbClassTypeColourWhite": {
                    "name": "hbClassTypeColourWhite",
                    "getSignature": {
                        "name": "hbClassTypeColourWhite",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 68
                    }
                },
                "hbClassTypeColourInherit": {
                    "name": "hbClassTypeColourInherit",
                    "getSignature": {
                        "name": "hbClassTypeColourInherit",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 73
                    }
                },
                "hbClassTypeMarginBottom": {
                    "name": "hbClassTypeMarginBottom",
                    "getSignature": {
                        "name": "hbClassTypeMarginBottom",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 78
                    }
                },
                "hbClassTypeAlignCenter": {
                    "name": "hbClassTypeAlignCenter",
                    "getSignature": {
                        "name": "hbClassTypeAlignCenter",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 83
                    }
                }
            }
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-15bdbaf7fbcd8082182838f1aa1c147b38af790b2c9db21004e45bbd1d2fdbe3d4b1f49de2048387a046b567348f4975ecedfc1511dcd810d6911f5d137e8efd",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {PortalModule} from \"@angular/cdk/portal\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport {AppComponent, TabsWithPortal, TabWithPortal} from './app.component';\n\nimport {\n  IconModule,\n  LinkModule,\n  ButtonModule,\n  HeaderModule,\n  TabsModule,\n  TypographyModule,\n  ChipModule\n} from \"@components\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TabsWithPortal,\n    TabWithPortal\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    LinkModule,\n    IconModule,\n    ButtonModule,\n    HeaderModule,\n    TabsModule,\n    TypographyModule,\n    PortalModule,\n    ChipModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "TabWithPortal"
                        },
                        {
                            "name": "TabsWithPortal"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "ButtonModule"
                        },
                        {
                            "name": "ChipModule"
                        },
                        {
                            "name": "HeaderModule"
                        },
                        {
                            "name": "IconModule"
                        },
                        {
                            "name": "LinkModule"
                        },
                        {
                            "name": "TabsModule"
                        },
                        {
                            "name": "TypographyModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-78922b3ae99d2c5249b333980bd5afde1b120b2cc6fedfd41b8b2cc90f279797cb4b22e183bf7e1d1dfab8c6100e77e7812c110234d81f866f544f28a3e18b15",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ButtonModule",
            "id": "module-ButtonModule-be70199a87096e4946df74cc0682c51c2e87f79b7af2dcc719aacb82cf6b4d6ab3e8cc8675c7fc28d8b3aec8c65d13ed87947bcc25a52a88d3b49748ae3dbda6",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/components/src/lib/button/button.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\nimport {ButtonComponent} from \"./button.component\";\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({\n  declarations: [\n    ButtonComponent,\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ButtonComponent\n  ]\n})\nexport class ButtonModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ChipModule",
            "id": "module-ChipModule-65855ea8aa467d7ff68dd7c0595be4d1e8f434cf63ab8c263de288f8c0b34e9755eeda2b51061c3d1ef054c2ec8a78bef99bc92c11a0f00fd21d447e3e1d4d03",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/components/src/lib/chip/chip.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\nimport {ChipComponent} from \"./chip.component\";\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({\n  declarations: [\n    ChipComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ChipComponent\n  ]\n})\nexport class ChipModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ChipComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ChipComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "HeaderModule",
            "id": "module-HeaderModule-c84f672bbd1b2540ed3fafd77c356b4d1a03ee07ccf7ff2fc83823d7a6a2b1951be1bc7696483c1c04f4aab2ffcb6bb2c8906621d668f7e0e0715a372840b8c8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/components/src/lib/header/header.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\nimport {HeaderComponent} from \"./header.component\";\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({\n  declarations: [\n    HeaderComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    HeaderComponent\n  ]\n})\nexport class HeaderModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "HeaderComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "IconModule",
            "id": "module-IconModule-b1d1b961ef0640cb7949064ca2ba9aef7ad0ee0aa320d189dd556c6707f9c44eaf43e44b6496bf73fe5c96b32b4c67045558b46f1e2060492d5bcad51bdbad7f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/components/src/lib/icon/icon.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\nimport {CommonModule} from \"@angular/common\";\nimport {BrowserModule} from \"@angular/platform-browser\";\nimport {FontAwesomeModule} from \"@fortawesome/angular-fontawesome\";\nimport {IconComponent} from \"./icon.component\";\n\n@NgModule({\n  declarations: [\n    IconComponent\n  ],\n  imports: [\n    CommonModule,\n    BrowserModule,\n    FontAwesomeModule\n  ],\n  exports: [\n    IconComponent\n  ]\n})\nexport class IconModule {\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "IconComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "LinkModule",
            "id": "module-LinkModule-b41d7ca122fd3f562fcabc7e7940b61d742e23314c0a6e7da9241077e27e775d021cfaa3f5571a160f9b17d957458f18266e3be6e1425039706efdae5d9e81aa",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/components/src/lib/link/link.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport {LinkComponent} from \"./link.component\";\n\n@NgModule({\n  declarations: [\n    LinkComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    LinkComponent\n  ]\n})\nexport class LinkModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "LinkComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "LinkComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TabsModule",
            "id": "module-TabsModule-7f0205e54c336a4e64979ebb0754aca41c090e8131e97a3c72814365f688e644a8d1600ee2f73e6ebe16e10bbf0a0e354945b45ebb0a6b9e839e6b3a425f55e5",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/components/src/lib/tabs/tabs.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from \"@angular/core\";\nimport {TabGroupComponent} from \"./tab-group.component\";\nimport {CommonModule} from \"@angular/common\";\nimport {IconModule} from \"../icon\";\nimport {TabButtonDirective} from \"./tab-button.directive\";\nimport {TabContentComponent} from \"./tab-content.component\";\n\n@NgModule({\n  declarations: [\n    TabGroupComponent,\n    TabContentComponent,\n    TabButtonDirective\n  ],\n  imports: [\n    CommonModule,\n    IconModule\n  ],\n  exports: [\n    TabGroupComponent,\n    TabContentComponent,\n  ]\n})\nexport class TabsModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TabButtonDirective"
                        },
                        {
                            "name": "TabContentComponent"
                        },
                        {
                            "name": "TabGroupComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "IconModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TabContentComponent"
                        },
                        {
                            "name": "TabGroupComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "TypographyModule",
            "id": "module-TypographyModule-297a48310da6fa4fa131f7f741efad843f516a9786181226b0208cdc6cd200fea09b91e0f304a70eb44b5aeab44e6dbdd46b4cc8b790faa17f4edd966046e41e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/components/src/lib/typography/typography.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from \"@angular/core\";\nimport {TypographyComponent} from \"./typography.component\";\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({\n  declarations: [\n    TypographyComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    TypographyComponent\n  ]\n})\nexport class TypographyModule {}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "TypographyComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "TypographyComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "generateUniqueId",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components/src/lib/_utils/unique-id/generate-unique-id.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(prefix: string): string => {\n  const prevSuffix = idCounter.get(prefix);\n  const suffix = prevSuffix === undefined ? 0 : prevSuffix + 1;\n\n  idCounter.set(prefix, suffix);\n\n  return `${prefix}-${suffix}`;\n}"
            },
            {
                "name": "iconMapper",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components/src/lib/icon/icon.mapper.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  coffee: () => import('@fortawesome/free-solid-svg-icons/faCoffee').then(({faCoffee}) => faCoffee),\n}"
            },
            {
                "name": "idCounter",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components/src/lib/_utils/unique-id/generate-unique-id.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new Map<string, number>()"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/components/src/lib/button/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "() => ({\n  template: `\n    <button dd-button>Please work!</button>\n  `\n})"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Icon",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/components/src/lib/icon/icon.interface.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/components/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "projects/components/src/lib/_utils/unique-id/generate-unique-id.ts": [
                {
                    "name": "generateUniqueId",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components/src/lib/_utils/unique-id/generate-unique-id.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(prefix: string): string => {\n  const prevSuffix = idCounter.get(prefix);\n  const suffix = prevSuffix === undefined ? 0 : prevSuffix + 1;\n\n  idCounter.set(prefix, suffix);\n\n  return `${prefix}-${suffix}`;\n}"
                },
                {
                    "name": "idCounter",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components/src/lib/_utils/unique-id/generate-unique-id.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new Map<string, number>()"
                }
            ],
            "projects/components/src/lib/icon/icon.mapper.ts": [
                {
                    "name": "iconMapper",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components/src/lib/icon/icon.mapper.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  coffee: () => import('@fortawesome/free-solid-svg-icons/faCoffee').then(({faCoffee}) => faCoffee),\n}"
                }
            ],
            "projects/components/src/lib/button/button.stories.ts": [
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/components/src/lib/button/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "() => ({\n  template: `\n    <button dd-button>Please work!</button>\n  `\n})"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/components/src/lib/icon/icon.interface.ts": [
                {
                    "name": "Icon",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/components/src/lib/icon/icon.interface.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/components/src/lib/_utils/unique-id/generate-unique-id.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "generateUniqueId",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/_utils/unique-id/generate-unique-id.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "idCounter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/button/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/chip/chip.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChipComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/icon/icon.mapper.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "iconMapper",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/link/link.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/tabs/tab-button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TabButtonDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/tabs/tab-content.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabContentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/tabs/tab-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/lib/typography/typography.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TypographyComponent",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/components/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabsWithPortal",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TabWithPortal",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}